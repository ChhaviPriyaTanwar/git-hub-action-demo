# name: Build and Push Docker Image

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Login to DockerHub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Build and push Docker image
#       uses: docker/build-push-action@v4
#       with:
#         context: .
#         push: true
#         tags: tanwarchhavi/simple-node-api:latest









name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set up environment variables
        run: |
          echo "DB_HOST=localhost" >> .env
          echo "DB_USER=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          echo "DB_NAME=mydb" >> .env
          echo "PORT=3000" >> .env

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h localhost -u root -proot --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Start app and test
        run: |
          npm start &
          sleep 10 # Give the server more time to start and initialize DB
          curl --fail http://localhost:3000/api/users || (echo "Server logs:" && cat *.log && exit 1)

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only push on main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: tanwarchhavi/simple-node-api:latest
